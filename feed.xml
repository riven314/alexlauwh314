<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://riven314.github.io/alexlauwh314/feed.xml" rel="self" type="application/atom+xml" /><link href="https://riven314.github.io/alexlauwh314/" rel="alternate" type="text/html" /><updated>2022-08-09T02:57:29-05:00</updated><id>https://riven314.github.io/alexlauwh314/feed.xml</id><title type="html">Document My Data Science Journey</title><subtitle>An easy to use blogging platform with support for Jupyter Notebooks.</subtitle><entry><title type="html">Delight Your VSCode Experience by Auto-formatting (Python, Javascript, Rust)</title><link href="https://riven314.github.io/alexlauwh314/ide/productivity/2022/08/12/VSCode-Autoformat.html" rel="alternate" type="text/html" title="Delight Your VSCode Experience by Auto-formatting (Python, Javascript, Rust)" /><published>2022-08-12T00:00:00-05:00</published><updated>2022-08-12T00:00:00-05:00</updated><id>https://riven314.github.io/alexlauwh314/ide/productivity/2022/08/12/VSCode-Autoformat</id><author><name></name></author><category term="IDE" /><category term="productivity" /><summary type="html"><![CDATA[If you still manually format your code in your IDE, then this post is for you! Save your time by enabling your IDE to format the code for you — I will walk you through how to configure your VSCode to do auto-formatting on scripts in Python, Javascript and Rust.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://riven314.github.io/alexlauwh314/images/2022-08-12-VSCode-Autoformat/cover.png" /><media:content medium="image" url="https://riven314.github.io/alexlauwh314/images/2022-08-12-VSCode-Autoformat/cover.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Notes on “Clean Code in Python” — When to Apply Inheritance?</title><link href="https://riven314.github.io/alexlauwh314/software/design/2022/06/12/WhenInheritance.html" rel="alternate" type="text/html" title="Notes on “Clean Code in Python” — When to Apply Inheritance?" /><published>2022-06-12T00:00:00-05:00</published><updated>2022-06-12T00:00:00-05:00</updated><id>https://riven314.github.io/alexlauwh314/software/design/2022/06/12/WhenInheritance</id><author><name></name></author><category term="software" /><category term="design" /><summary type="html"><![CDATA[It is common to see inheritance pattern in Python, but misusing so could lead to ill-maintained code when it scales. This post highlights a few situations in flavor of using inheritance pattern.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://riven314.github.io/alexlauwh314/images/2022-06-12-WhenInheritance/cover.jpg" /><media:content medium="image" url="https://riven314.github.io/alexlauwh314/images/2022-06-12-WhenInheritance/cover.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Notes on “Clean Code in Python” — Design by Contracts (DbC)</title><link href="https://riven314.github.io/alexlauwh314/software/design/2022/06/03/DesignByContract.html" rel="alternate" type="text/html" title="Notes on “Clean Code in Python” — Design by Contracts (DbC)" /><published>2022-06-03T00:00:00-05:00</published><updated>2022-06-03T00:00:00-05:00</updated><id>https://riven314.github.io/alexlauwh314/software/design/2022/06/03/DesignByContract</id><author><name></name></author><category term="software" /><category term="design" /><summary type="html"><![CDATA[This post talks about a design practice called Design by Contract (DbC) in Python context, with an example from JAX codebase. I came across this concept in "Clean Code in Python: Develop maintainable and efficient code, 2nd Edition". I find this practice ubiquitous in various open source Python codebases, so I would like to document its principle and try to apply it in the future.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://riven314.github.io/alexlauwh314/images/2022-06-03-DesignByContract/cover.jpg" /><media:content medium="image" url="https://riven314.github.io/alexlauwh314/images/2022-06-03-DesignByContract/cover.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Quick Guide for Installing NVIDIA Driver, CUDA Toolkit and cuDNN</title><link href="https://riven314.github.io/alexlauwh314/cuda/devops/2022/03/31/Quick-Guide-Install-CUDA.html" rel="alternate" type="text/html" title="Quick Guide for Installing NVIDIA Driver, CUDA Toolkit and cuDNN" /><published>2022-03-31T00:00:00-05:00</published><updated>2022-03-31T00:00:00-05:00</updated><id>https://riven314.github.io/alexlauwh314/cuda/devops/2022/03/31/Quick-Guide-Install-CUDA</id><author><name></name></author><category term="cuda" /><category term="devops" /><summary type="html"><![CDATA[If you need GPU computing for your living, you probably used to install NVIDIA driver, CUDA Toolkit and cuDNN for your machine. The whole procedures are non-trivial and you may feel clueless if something go wrong in the mid. This guide aims to offer you clear instructions with things you should pay attention.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://riven314.github.io/alexlauwh314/images/2022-03-31-Quick-Guide-Install-CUDA/cover.png" /><media:content medium="image" url="https://riven314.github.io/alexlauwh314/images/2022-03-31-Quick-Guide-Install-CUDA/cover.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Paper Summary: “MVSNet: Depth Inference for Unstructured Multi-view Stereo”</title><link href="https://riven314.github.io/alexlauwh314/paper/computer-graphics/2022/03/29/MVSNet.html" rel="alternate" type="text/html" title="Paper Summary: “MVSNet: Depth Inference for Unstructured Multi-view Stereo”" /><published>2022-03-29T00:00:00-05:00</published><updated>2022-03-29T00:00:00-05:00</updated><id>https://riven314.github.io/alexlauwh314/paper/computer-graphics/2022/03/29/MVSNet</id><author><name></name></author><category term="paper" /><category term="computer-graphics" /><summary type="html"><![CDATA[Multi-view stereo has been a well-studied 3D computer vision problem. MVSNet nicely demonstrates how deep learning could interplay with traditional algorithm to better solve this problem. It is an end-to-end deep learning pipeline resembling plane sweeping stereo. It is scalable and significantly outperforms existing models.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://riven314.github.io/alexlauwh314/images/2022-03-29-MVSNet/cover.png" /><media:content medium="image" url="https://riven314.github.io/alexlauwh314/images/2022-03-29-MVSNet/cover.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>